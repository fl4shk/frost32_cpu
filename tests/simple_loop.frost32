.org 0x0000
main:
{
	;cpyi u0, 0x50		; 0x0
	;cpyi u0, 20			; 0x0
	;subi u0, zero, 19		; 0x0
	subi u0, zero, 4
	;cpy u1, u0			; 0x4
	cpyi u1, 0x9000

	;mul u3, u0, u1

	addi u4, u3, 0x20

	subi u2, zero, 20		; 0x8

	;cpyi u3, loop

	;add zero, zero, zero
	;add zero, zero, zero
	;add zero, zero, zero
	;add zero, zero, zero
	;add zero, zero, zero


loop:
	inc u1				; 0xc
	
	dec u0				; 0x10
	mul u3, u0, u1
	;dec u0				; 0x10
	;dec u0				; 0x10
	;dec u0				; 0x10
	;addi u0, 7

	;add zero, zero, zero
	;add zero, zero, zero
	;add zero, zero, zero
	;add zero, zero, zero

	bges u0, u2, loop	; 0x14

	;slts temp, u0, u2
	;beq temp, zero, loop

	;jges u0, u2, u3

	;calla test_call		; 0x18
	;addsi lr, pc, 8		; 0x18
	;bra test_call		; 0x1c
	;addsi lr, pc, . - test_call + 8
	;addsi lr, pc, 
	;;cpyi lr, test_call

	;; Relative call
	;addsi lr, pc, test_call - .
	;call lr

	add zero, zero, zero
	add zero, zero, zero
	add zero, zero, zero
	add zero, zero, zero
	add zero, zero, zero
	add zero, zero, zero

	; Branch to subroutine
	addsi lr, pc, 8
	bra test_call


	;bra quit
	bra 0x4000
}

test_call:
{
	cpyi u3, 6
	jmp lr
}

//main:
//{
//	cpyi u0, 0x50
//}

.org 0x4000
;.org 0x4000 >> 2
quit:
{
	bra quit
}
