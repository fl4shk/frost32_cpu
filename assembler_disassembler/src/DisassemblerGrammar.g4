grammar DisassemblerGrammar;

// Yep, this is the whole grammar.
// Short, isn't it?

// Note that this takes Verilog VMEM format text (such as that generated by
// the assembler) as input.

// Parser rules
program:
	line*
	;

line:
	TokOrg TokNewline
	| TokHexNum TokNewline
	| TokNewline // Allow blank lines and lines with only a comment
	;

// Lexer rules
// Allow comments
LexLineComment: ('//' | ';') (~ '\n')* -> skip ;

// Allow arbitrary spaces inside hexadecimal numbers
// This is more lenient than is necessary, but might be helpful for
// hand-made Verilog VMEM format text, or if the assembler's output ever
// changes.
fragment FragHexNum: ([0-9A-Fa-f] ([0-9A-Fa-f ]+)) ;

TokHexNum: FragHexNum ;
TokOrg: '@' FragHexNum ;
TokNewline: '\n' ;
